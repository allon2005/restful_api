<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	version="3.1">
	<display-name>springMVC1</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>

	<servlet>
		<servlet-name>springMVC1</servlet-name>  <!-- name of the DispatcherServlet instance -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>springMVC1</servlet-name> <!-- map the DispatcherServlet instance to the following url patterns -->
		<url-pattern>/welcome.jsp</url-pattern>
		<url-pattern>/welcome.html</url-pattern>
		<url-pattern>*.html</url-pattern>
		<url-pattern>*.htm</url-pattern>
		<url-pattern>/</url-pattern>

	</servlet-mapping>

</web-app>

<!-- The whole purpose of web.xml is to map the url request to the corresponding instance of DispatcherServlet (front controller). 
So, when an URL request comes in, spring MVC will link it to the designed dispatcherServlet to handle the following steps for the request.
 -->